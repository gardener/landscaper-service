//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright (c) 2023 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file

SPDX-License-Identifier: Apache-2.0
*/
// Code generated by defaulter-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// RegisterDefaults adds defaulters functions to the given scheme.
// Public to allow building arbitrary schemes.
// All generated defaulters are covering - they call all nested defaulters.
func RegisterDefaults(scheme *runtime.Scheme) error {
	scheme.AddTypeDefaultingFunc(&AvailabilityCollection{}, func(obj interface{}) { SetObjectDefaults_AvailabilityCollection(obj.(*AvailabilityCollection)) })
	scheme.AddTypeDefaultingFunc(&AvailabilityCollectionList{}, func(obj interface{}) { SetObjectDefaults_AvailabilityCollectionList(obj.(*AvailabilityCollectionList)) })
	scheme.AddTypeDefaultingFunc(&Instance{}, func(obj interface{}) { SetObjectDefaults_Instance(obj.(*Instance)) })
	scheme.AddTypeDefaultingFunc(&InstanceList{}, func(obj interface{}) { SetObjectDefaults_InstanceList(obj.(*InstanceList)) })
	scheme.AddTypeDefaultingFunc(&LandscaperDeployment{}, func(obj interface{}) { SetObjectDefaults_LandscaperDeployment(obj.(*LandscaperDeployment)) })
	scheme.AddTypeDefaultingFunc(&LandscaperDeploymentList{}, func(obj interface{}) { SetObjectDefaults_LandscaperDeploymentList(obj.(*LandscaperDeploymentList)) })
	scheme.AddTypeDefaultingFunc(&ServiceTargetConfig{}, func(obj interface{}) { SetObjectDefaults_ServiceTargetConfig(obj.(*ServiceTargetConfig)) })
	scheme.AddTypeDefaultingFunc(&ServiceTargetConfigList{}, func(obj interface{}) { SetObjectDefaults_ServiceTargetConfigList(obj.(*ServiceTargetConfigList)) })
	return nil
}

func SetObjectDefaults_AvailabilityCollection(in *AvailabilityCollection) {
	SetDefaults_AvailabilityCollection(in)
}

func SetObjectDefaults_AvailabilityCollectionList(in *AvailabilityCollectionList) {
	for i := range in.Items {
		a := &in.Items[i]
		SetObjectDefaults_AvailabilityCollection(a)
	}
}

func SetObjectDefaults_Instance(in *Instance) {
	SetDefaults_Instance(in)
}

func SetObjectDefaults_InstanceList(in *InstanceList) {
	for i := range in.Items {
		a := &in.Items[i]
		SetObjectDefaults_Instance(a)
	}
}

func SetObjectDefaults_LandscaperDeployment(in *LandscaperDeployment) {
	SetDefaults_LandscaperDeployment(in)
}

func SetObjectDefaults_LandscaperDeploymentList(in *LandscaperDeploymentList) {
	for i := range in.Items {
		a := &in.Items[i]
		SetObjectDefaults_LandscaperDeployment(a)
	}
}

func SetObjectDefaults_ServiceTargetConfig(in *ServiceTargetConfig) {
	SetDefaults_ServiceTargetConfig(in)
}

func SetObjectDefaults_ServiceTargetConfigList(in *ServiceTargetConfigList) {
	for i := range in.Items {
		a := &in.Items[i]
		SetObjectDefaults_ServiceTargetConfig(a)
	}
}
