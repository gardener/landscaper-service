//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright (c) 2023 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file

SPDX-License-Identifier: Apache-2.0
*/
// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"

	dataplane "github.com/gardener/landscaper-service/pkg/apis/dataplane"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Error)(nil), (*dataplane.Error)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Error_To_dataplane_Error(a.(*Error), b.(*dataplane.Error), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dataplane.Error)(nil), (*Error)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dataplane_Error_To_v1alpha1_Error(a.(*dataplane.Error), b.(*Error), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NamespaceRegistration)(nil), (*dataplane.NamespaceRegistration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NamespaceRegistration_To_dataplane_NamespaceRegistration(a.(*NamespaceRegistration), b.(*dataplane.NamespaceRegistration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dataplane.NamespaceRegistration)(nil), (*NamespaceRegistration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dataplane_NamespaceRegistration_To_v1alpha1_NamespaceRegistration(a.(*dataplane.NamespaceRegistration), b.(*NamespaceRegistration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NamespaceRegistrationList)(nil), (*dataplane.NamespaceRegistrationList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NamespaceRegistrationList_To_dataplane_NamespaceRegistrationList(a.(*NamespaceRegistrationList), b.(*dataplane.NamespaceRegistrationList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dataplane.NamespaceRegistrationList)(nil), (*NamespaceRegistrationList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dataplane_NamespaceRegistrationList_To_v1alpha1_NamespaceRegistrationList(a.(*dataplane.NamespaceRegistrationList), b.(*NamespaceRegistrationList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NamespaceRegistrationSpec)(nil), (*dataplane.NamespaceRegistrationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NamespaceRegistrationSpec_To_dataplane_NamespaceRegistrationSpec(a.(*NamespaceRegistrationSpec), b.(*dataplane.NamespaceRegistrationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dataplane.NamespaceRegistrationSpec)(nil), (*NamespaceRegistrationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dataplane_NamespaceRegistrationSpec_To_v1alpha1_NamespaceRegistrationSpec(a.(*dataplane.NamespaceRegistrationSpec), b.(*NamespaceRegistrationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NamespaceRegistrationStatus)(nil), (*dataplane.NamespaceRegistrationStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NamespaceRegistrationStatus_To_dataplane_NamespaceRegistrationStatus(a.(*NamespaceRegistrationStatus), b.(*dataplane.NamespaceRegistrationStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dataplane.NamespaceRegistrationStatus)(nil), (*NamespaceRegistrationStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dataplane_NamespaceRegistrationStatus_To_v1alpha1_NamespaceRegistrationStatus(a.(*dataplane.NamespaceRegistrationStatus), b.(*NamespaceRegistrationStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Subject)(nil), (*dataplane.Subject)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Subject_To_dataplane_Subject(a.(*Subject), b.(*dataplane.Subject), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dataplane.Subject)(nil), (*Subject)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dataplane_Subject_To_v1alpha1_Subject(a.(*dataplane.Subject), b.(*Subject), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SubjectList)(nil), (*dataplane.SubjectList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_SubjectList_To_dataplane_SubjectList(a.(*SubjectList), b.(*dataplane.SubjectList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dataplane.SubjectList)(nil), (*SubjectList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dataplane_SubjectList_To_v1alpha1_SubjectList(a.(*dataplane.SubjectList), b.(*SubjectList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SubjectListList)(nil), (*dataplane.SubjectListList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_SubjectListList_To_dataplane_SubjectListList(a.(*SubjectListList), b.(*dataplane.SubjectListList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dataplane.SubjectListList)(nil), (*SubjectListList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dataplane_SubjectListList_To_v1alpha1_SubjectListList(a.(*dataplane.SubjectListList), b.(*SubjectListList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SubjectListSpec)(nil), (*dataplane.SubjectListSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_SubjectListSpec_To_dataplane_SubjectListSpec(a.(*SubjectListSpec), b.(*dataplane.SubjectListSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dataplane.SubjectListSpec)(nil), (*SubjectListSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dataplane_SubjectListSpec_To_v1alpha1_SubjectListSpec(a.(*dataplane.SubjectListSpec), b.(*SubjectListSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SubjectListStatus)(nil), (*dataplane.SubjectListStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_SubjectListStatus_To_dataplane_SubjectListStatus(a.(*SubjectListStatus), b.(*dataplane.SubjectListStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dataplane.SubjectListStatus)(nil), (*SubjectListStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dataplane_SubjectListStatus_To_v1alpha1_SubjectListStatus(a.(*dataplane.SubjectListStatus), b.(*SubjectListStatus), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_Error_To_dataplane_Error(in *Error, out *dataplane.Error, s conversion.Scope) error {
	out.Operation = in.Operation
	out.LastTransitionTime = in.LastTransitionTime
	out.LastUpdateTime = in.LastUpdateTime
	out.Reason = in.Reason
	out.Message = in.Message
	return nil
}

// Convert_v1alpha1_Error_To_dataplane_Error is an autogenerated conversion function.
func Convert_v1alpha1_Error_To_dataplane_Error(in *Error, out *dataplane.Error, s conversion.Scope) error {
	return autoConvert_v1alpha1_Error_To_dataplane_Error(in, out, s)
}

func autoConvert_dataplane_Error_To_v1alpha1_Error(in *dataplane.Error, out *Error, s conversion.Scope) error {
	out.Operation = in.Operation
	out.LastTransitionTime = in.LastTransitionTime
	out.LastUpdateTime = in.LastUpdateTime
	out.Reason = in.Reason
	out.Message = in.Message
	return nil
}

// Convert_dataplane_Error_To_v1alpha1_Error is an autogenerated conversion function.
func Convert_dataplane_Error_To_v1alpha1_Error(in *dataplane.Error, out *Error, s conversion.Scope) error {
	return autoConvert_dataplane_Error_To_v1alpha1_Error(in, out, s)
}

func autoConvert_v1alpha1_NamespaceRegistration_To_dataplane_NamespaceRegistration(in *NamespaceRegistration, out *dataplane.NamespaceRegistration, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_NamespaceRegistrationSpec_To_dataplane_NamespaceRegistrationSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_NamespaceRegistrationStatus_To_dataplane_NamespaceRegistrationStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_NamespaceRegistration_To_dataplane_NamespaceRegistration is an autogenerated conversion function.
func Convert_v1alpha1_NamespaceRegistration_To_dataplane_NamespaceRegistration(in *NamespaceRegistration, out *dataplane.NamespaceRegistration, s conversion.Scope) error {
	return autoConvert_v1alpha1_NamespaceRegistration_To_dataplane_NamespaceRegistration(in, out, s)
}

func autoConvert_dataplane_NamespaceRegistration_To_v1alpha1_NamespaceRegistration(in *dataplane.NamespaceRegistration, out *NamespaceRegistration, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_dataplane_NamespaceRegistrationSpec_To_v1alpha1_NamespaceRegistrationSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_dataplane_NamespaceRegistrationStatus_To_v1alpha1_NamespaceRegistrationStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_dataplane_NamespaceRegistration_To_v1alpha1_NamespaceRegistration is an autogenerated conversion function.
func Convert_dataplane_NamespaceRegistration_To_v1alpha1_NamespaceRegistration(in *dataplane.NamespaceRegistration, out *NamespaceRegistration, s conversion.Scope) error {
	return autoConvert_dataplane_NamespaceRegistration_To_v1alpha1_NamespaceRegistration(in, out, s)
}

func autoConvert_v1alpha1_NamespaceRegistrationList_To_dataplane_NamespaceRegistrationList(in *NamespaceRegistrationList, out *dataplane.NamespaceRegistrationList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]dataplane.NamespaceRegistration)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_NamespaceRegistrationList_To_dataplane_NamespaceRegistrationList is an autogenerated conversion function.
func Convert_v1alpha1_NamespaceRegistrationList_To_dataplane_NamespaceRegistrationList(in *NamespaceRegistrationList, out *dataplane.NamespaceRegistrationList, s conversion.Scope) error {
	return autoConvert_v1alpha1_NamespaceRegistrationList_To_dataplane_NamespaceRegistrationList(in, out, s)
}

func autoConvert_dataplane_NamespaceRegistrationList_To_v1alpha1_NamespaceRegistrationList(in *dataplane.NamespaceRegistrationList, out *NamespaceRegistrationList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]NamespaceRegistration)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_dataplane_NamespaceRegistrationList_To_v1alpha1_NamespaceRegistrationList is an autogenerated conversion function.
func Convert_dataplane_NamespaceRegistrationList_To_v1alpha1_NamespaceRegistrationList(in *dataplane.NamespaceRegistrationList, out *NamespaceRegistrationList, s conversion.Scope) error {
	return autoConvert_dataplane_NamespaceRegistrationList_To_v1alpha1_NamespaceRegistrationList(in, out, s)
}

func autoConvert_v1alpha1_NamespaceRegistrationSpec_To_dataplane_NamespaceRegistrationSpec(in *NamespaceRegistrationSpec, out *dataplane.NamespaceRegistrationSpec, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha1_NamespaceRegistrationSpec_To_dataplane_NamespaceRegistrationSpec is an autogenerated conversion function.
func Convert_v1alpha1_NamespaceRegistrationSpec_To_dataplane_NamespaceRegistrationSpec(in *NamespaceRegistrationSpec, out *dataplane.NamespaceRegistrationSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_NamespaceRegistrationSpec_To_dataplane_NamespaceRegistrationSpec(in, out, s)
}

func autoConvert_dataplane_NamespaceRegistrationSpec_To_v1alpha1_NamespaceRegistrationSpec(in *dataplane.NamespaceRegistrationSpec, out *NamespaceRegistrationSpec, s conversion.Scope) error {
	return nil
}

// Convert_dataplane_NamespaceRegistrationSpec_To_v1alpha1_NamespaceRegistrationSpec is an autogenerated conversion function.
func Convert_dataplane_NamespaceRegistrationSpec_To_v1alpha1_NamespaceRegistrationSpec(in *dataplane.NamespaceRegistrationSpec, out *NamespaceRegistrationSpec, s conversion.Scope) error {
	return autoConvert_dataplane_NamespaceRegistrationSpec_To_v1alpha1_NamespaceRegistrationSpec(in, out, s)
}

func autoConvert_v1alpha1_NamespaceRegistrationStatus_To_dataplane_NamespaceRegistrationStatus(in *NamespaceRegistrationStatus, out *dataplane.NamespaceRegistrationStatus, s conversion.Scope) error {
	out.Phase = in.Phase
	out.LastError = (*dataplane.Error)(unsafe.Pointer(in.LastError))
	return nil
}

// Convert_v1alpha1_NamespaceRegistrationStatus_To_dataplane_NamespaceRegistrationStatus is an autogenerated conversion function.
func Convert_v1alpha1_NamespaceRegistrationStatus_To_dataplane_NamespaceRegistrationStatus(in *NamespaceRegistrationStatus, out *dataplane.NamespaceRegistrationStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_NamespaceRegistrationStatus_To_dataplane_NamespaceRegistrationStatus(in, out, s)
}

func autoConvert_dataplane_NamespaceRegistrationStatus_To_v1alpha1_NamespaceRegistrationStatus(in *dataplane.NamespaceRegistrationStatus, out *NamespaceRegistrationStatus, s conversion.Scope) error {
	out.Phase = in.Phase
	out.LastError = (*Error)(unsafe.Pointer(in.LastError))
	return nil
}

// Convert_dataplane_NamespaceRegistrationStatus_To_v1alpha1_NamespaceRegistrationStatus is an autogenerated conversion function.
func Convert_dataplane_NamespaceRegistrationStatus_To_v1alpha1_NamespaceRegistrationStatus(in *dataplane.NamespaceRegistrationStatus, out *NamespaceRegistrationStatus, s conversion.Scope) error {
	return autoConvert_dataplane_NamespaceRegistrationStatus_To_v1alpha1_NamespaceRegistrationStatus(in, out, s)
}

func autoConvert_v1alpha1_Subject_To_dataplane_Subject(in *Subject, out *dataplane.Subject, s conversion.Scope) error {
	out.Kind = in.Kind
	out.Name = in.Name
	out.Namespace = in.Namespace
	return nil
}

// Convert_v1alpha1_Subject_To_dataplane_Subject is an autogenerated conversion function.
func Convert_v1alpha1_Subject_To_dataplane_Subject(in *Subject, out *dataplane.Subject, s conversion.Scope) error {
	return autoConvert_v1alpha1_Subject_To_dataplane_Subject(in, out, s)
}

func autoConvert_dataplane_Subject_To_v1alpha1_Subject(in *dataplane.Subject, out *Subject, s conversion.Scope) error {
	out.Kind = in.Kind
	out.Name = in.Name
	out.Namespace = in.Namespace
	return nil
}

// Convert_dataplane_Subject_To_v1alpha1_Subject is an autogenerated conversion function.
func Convert_dataplane_Subject_To_v1alpha1_Subject(in *dataplane.Subject, out *Subject, s conversion.Scope) error {
	return autoConvert_dataplane_Subject_To_v1alpha1_Subject(in, out, s)
}

func autoConvert_v1alpha1_SubjectList_To_dataplane_SubjectList(in *SubjectList, out *dataplane.SubjectList, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_SubjectListSpec_To_dataplane_SubjectListSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_SubjectListStatus_To_dataplane_SubjectListStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_SubjectList_To_dataplane_SubjectList is an autogenerated conversion function.
func Convert_v1alpha1_SubjectList_To_dataplane_SubjectList(in *SubjectList, out *dataplane.SubjectList, s conversion.Scope) error {
	return autoConvert_v1alpha1_SubjectList_To_dataplane_SubjectList(in, out, s)
}

func autoConvert_dataplane_SubjectList_To_v1alpha1_SubjectList(in *dataplane.SubjectList, out *SubjectList, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_dataplane_SubjectListSpec_To_v1alpha1_SubjectListSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_dataplane_SubjectListStatus_To_v1alpha1_SubjectListStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_dataplane_SubjectList_To_v1alpha1_SubjectList is an autogenerated conversion function.
func Convert_dataplane_SubjectList_To_v1alpha1_SubjectList(in *dataplane.SubjectList, out *SubjectList, s conversion.Scope) error {
	return autoConvert_dataplane_SubjectList_To_v1alpha1_SubjectList(in, out, s)
}

func autoConvert_v1alpha1_SubjectListList_To_dataplane_SubjectListList(in *SubjectListList, out *dataplane.SubjectListList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]dataplane.SubjectList)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_SubjectListList_To_dataplane_SubjectListList is an autogenerated conversion function.
func Convert_v1alpha1_SubjectListList_To_dataplane_SubjectListList(in *SubjectListList, out *dataplane.SubjectListList, s conversion.Scope) error {
	return autoConvert_v1alpha1_SubjectListList_To_dataplane_SubjectListList(in, out, s)
}

func autoConvert_dataplane_SubjectListList_To_v1alpha1_SubjectListList(in *dataplane.SubjectListList, out *SubjectListList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]SubjectList)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_dataplane_SubjectListList_To_v1alpha1_SubjectListList is an autogenerated conversion function.
func Convert_dataplane_SubjectListList_To_v1alpha1_SubjectListList(in *dataplane.SubjectListList, out *SubjectListList, s conversion.Scope) error {
	return autoConvert_dataplane_SubjectListList_To_v1alpha1_SubjectListList(in, out, s)
}

func autoConvert_v1alpha1_SubjectListSpec_To_dataplane_SubjectListSpec(in *SubjectListSpec, out *dataplane.SubjectListSpec, s conversion.Scope) error {
	out.Subjects = *(*[]dataplane.Subject)(unsafe.Pointer(&in.Subjects))
	return nil
}

// Convert_v1alpha1_SubjectListSpec_To_dataplane_SubjectListSpec is an autogenerated conversion function.
func Convert_v1alpha1_SubjectListSpec_To_dataplane_SubjectListSpec(in *SubjectListSpec, out *dataplane.SubjectListSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_SubjectListSpec_To_dataplane_SubjectListSpec(in, out, s)
}

func autoConvert_dataplane_SubjectListSpec_To_v1alpha1_SubjectListSpec(in *dataplane.SubjectListSpec, out *SubjectListSpec, s conversion.Scope) error {
	out.Subjects = *(*[]Subject)(unsafe.Pointer(&in.Subjects))
	return nil
}

// Convert_dataplane_SubjectListSpec_To_v1alpha1_SubjectListSpec is an autogenerated conversion function.
func Convert_dataplane_SubjectListSpec_To_v1alpha1_SubjectListSpec(in *dataplane.SubjectListSpec, out *SubjectListSpec, s conversion.Scope) error {
	return autoConvert_dataplane_SubjectListSpec_To_v1alpha1_SubjectListSpec(in, out, s)
}

func autoConvert_v1alpha1_SubjectListStatus_To_dataplane_SubjectListStatus(in *SubjectListStatus, out *dataplane.SubjectListStatus, s conversion.Scope) error {
	out.Phase = in.Phase
	out.ObservedGeneration = in.ObservedGeneration
	return nil
}

// Convert_v1alpha1_SubjectListStatus_To_dataplane_SubjectListStatus is an autogenerated conversion function.
func Convert_v1alpha1_SubjectListStatus_To_dataplane_SubjectListStatus(in *SubjectListStatus, out *dataplane.SubjectListStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_SubjectListStatus_To_dataplane_SubjectListStatus(in, out, s)
}

func autoConvert_dataplane_SubjectListStatus_To_v1alpha1_SubjectListStatus(in *dataplane.SubjectListStatus, out *SubjectListStatus, s conversion.Scope) error {
	out.Phase = in.Phase
	out.ObservedGeneration = in.ObservedGeneration
	return nil
}

// Convert_dataplane_SubjectListStatus_To_v1alpha1_SubjectListStatus is an autogenerated conversion function.
func Convert_dataplane_SubjectListStatus_To_v1alpha1_SubjectListStatus(in *dataplane.SubjectListStatus, out *SubjectListStatus, s conversion.Scope) error {
	return autoConvert_dataplane_SubjectListStatus_To_v1alpha1_SubjectListStatus(in, out, s)
}
