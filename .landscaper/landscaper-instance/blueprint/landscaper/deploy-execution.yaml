{{ $landscaperComponent := getComponent .cd "name" "landscaper" }}

deployItems:
  - name: landscaper
    type: landscaper.gardener.cloud/helm
    target:
      import: hostingCluster
    timeout: 15m
    config:
      apiVersion: helm.deployer.landscaper.gardener.cloud/v1alpha1
      kind: ProviderConfiguration
      updateStrategy: patch
      name: landscaper
      namespace: {{ .imports.hostingClusterNamespace }}
      createNamespace: true

      readinessChecks:
        disableDefault: false

        custom:
          - name: WebhookIngressReady
            timeout: 10m
            resourceSelector:
              - apiVersion: networking.k8s.io/v1
                kind: Ingress
                name: landscaper-{{ .imports.hostingClusterNamespace }}-webhooks
                namespace: {{ .imports.hostingClusterNamespace }}
            requirements:
              - jsonPath: .status.loadBalancer.ingress[0]
                operator: exists

      chart:
        {{ $resource := getResource $landscaperComponent "name" "landscaper-controller-deployment-chart" }}
        ref: {{ $resource.access.imageReference }}

      values:
        nameOverride: landscaper-{{ .imports.hostingClusterNamespace }}
        fullnameOverride: landscaper-{{ .imports.hostingClusterNamespace }}

        landscaper:
          verbosity: {{ .imports.landscaperConfig.landscaper.verbosity | default "info" }}

          {{- if (dig "landscaperConfig" "landscaper" "controllers" false .imports) }}
          controllers:
          {{- toYaml .imports.landscaperConfig.landscaper.controllers | nindent 12 }}
          {{- end }}

          crdManagement:
            deployCrd: true
            forceUpdate: true
          registryConfig:
{{ toYaml .imports.registryConfig | indent 12 }}

          {{- if (dig "landscaperConfig" "landscaper" "k8sClientSettings" false .imports) }}
          k8sClientSettings:
          {{- toYaml .imports.landscaperConfig.landscaper.k8sClientSettings | nindent 12 }}
          {{- end }}

          deployers: []

          deployerManagement:
            disable: true
            agent:
              disable: true

          deployersConfig: {}

          {{- if (dig "landscaperConfig" "landscaper" "deployItemTimeouts" false .imports) }}
          deployItemTimeouts:
          {{- toYaml .imports.landscaperConfig.landscaper.deployItemTimeouts | nindent 12 }}
          {{- end }}

          healthCheck:
            name: landscaper-{{ .imports.hostingClusterNamespace }}
            additionalDeployments:
              deployments:
                - laas-{{ .imports.hostingClusterNamespace }}-shoot-sidecar
{{ if has "helm" .imports.landscaperConfig.deployers }}
                - helm-{{ .imports.hostingClusterNamespace }}-helm-deployer
{{ end }}
{{ if has "manifest" .imports.landscaperConfig.deployers }}
                - manifest-{{ .imports.hostingClusterNamespace }}-manifest-deployer
{{ end }}
{{ if has "container" .imports.landscaperConfig.deployers }}
                - container-{{ .imports.hostingClusterNamespace }}-container-deployer
{{ end }}

        image: {}

        controller:
          name: landscaper-controller

          landscaperKubeconfig:
            kubeconfig: |
{{ .imports.landscaperControllerKubeconfigYaml | indent 14 }}

          replicaCount: {{ .imports.landscaperConfig.landscaper.replicas | default 1 }}

          {{ $landscaperImgresource := getResource $landscaperComponent "name" "landscaper-controller" }}
          {{ $landscaperImgrepo := ociRefRepo $landscaperImgresource.access.imageReference }}
          {{ $landscaperImgtag := ociRefVersion $landscaperImgresource.access.imageReference }}
          image:
            repository: {{ $landscaperImgrepo }}
            tag: {{ $landscaperImgtag }}
            pullPolicy: IfNotPresent

        webhooksServer:
          name: landscaper-webhooks

          landscaperKubeconfig:
            kubeconfig: |
{{ .imports.landscaperWebhooksKubeconfigYaml | indent 14}}

          replicaCount: {{ .imports.landscaperConfig.webhooksServer.replicas | default 1 }}

          {{ $webhooksImgresource := getResource $landscaperComponent "name" "landscaper-webhooks-server" }}
          {{ $webhooksImgrepo := ociRefRepo $webhooksImgresource.access.imageReference }}
          {{ $webhooksImgtag := ociRefVersion $webhooksImgresource.access.imageReference }}
          image:
            repository: {{ $webhooksImgrepo }}
            tag: {{ $webhooksImgtag }}
            pullPolicy: IfNotPresent

          servicePort: {{ .imports.landscaperConfig.webhooksServer.servicePort | default 9443 }}
          disableWebhooks: []
          certificatesNamespace: {{ .imports.targetClusterNamespace }}

          ingress:
            host: {{ .imports.webhooksHostName }}
            className: nginx
            dns:
              class: garden

          {{- if (dig "landscaperConfig" "webhooksServer" "resources" false .imports) }}
          resources:
          {{- toYaml .imports.landscaperConfig.webhooksServer.resources | nindent 12 }}
          {{- end }}

          {{- if (dig "landscaperConfig" "webhooksServer" "hpa" false .imports) }}
          hpa:
            {{- if (dig "landscaperConfig" "webhooksServer" "hpa" "maxReplicas" false .imports) }}
            maxReplicas: {{ .imports.landscaperConfig.webhooksServer.hpa.maxReplicas }}
            {{- end }}
            {{- if (dig "landscaperConfig" "webhooksServer" "hpa" "averageCpuUtilization" false .imports) }}
            averageCpuUtilization: {{ .imports.landscaperConfig.webhooksServer.hpa.averageCpuUtilization }}
            {{- end }}
            {{- if (dig "landscaperConfig" "webhooksServer" "hpa" "averageMemoryUtilization" false .imports) }}
            averageMemoryUtilization: {{ .imports.landscaperConfig.webhooksServer.hpa.averageMemoryUtilization }}
            {{- end }}
          {{- end }}

        service:
          type: ClusterIP
          port: 80

        global:
          serviceAccount:
            controller:
              create: true
              annotations: {}
              name: landscaper-{{ .imports.hostingClusterNamespace }}
            webhooksServer:
              name: landscaper-webhooks

        {{- if (dig "landscaperConfig" "resources" false .imports) }}
        resources:
        {{- toYaml .imports.landscaperConfig.resources | nindent 10 }}
        {{- end }}

        {{- if (dig "landscaperConfig" "resourcesMain" false .imports) }}
        resourcesMain:
        {{- toYaml .imports.landscaperConfig.resourcesMain | nindent 10 }}
        {{- end }}

        {{- if (dig "landscaperConfig" "hpaMain" false .imports) }}
        hpaMain:
          {{- if (dig "landscaperConfig" "hpaMain" "maxReplicas" false .imports) }}
          maxReplicas: {{ .imports.landscaperConfig.hpaMain.maxReplicas }}
          {{- end }}
          {{- if (dig "landscaperConfig" "hpaMain" "averageCpuUtilization" false .imports) }}
          averageCpuUtilization: {{ .imports.landscaperConfig.hpaMain.averageCpuUtilization }}
          {{- end }}
          {{- if (dig "landscaperConfig" "hpaMain" "averageMemoryUtilization" false .imports) }}
          averageMemoryUtilization: {{ .imports.landscaperConfig.hpaMain.averageMemoryUtilization }}
          {{- end }}
        {{- end }}

{{ if has "helm" .imports.landscaperConfig.deployers }}
  - name: helm-deployer
    type: landscaper.gardener.cloud/helm
    target:
      import: hostingCluster
    dependsOn:
      - landscaper
    config:
      apiVersion: helm.deployer.landscaper.gardener.cloud/v1alpha1
      kind: ProviderConfiguration
      updateStrategy: patch
      name: helm-{{ .imports.hostingClusterNamespace }}
      namespace: {{ .imports.hostingClusterNamespace }}

      helmDeployment: false
      createNamespace: false

      readinessChecks:
        disableDefault: false

      chart:
        {{ $helmDeployerComponent := getComponent $landscaperComponent "name" "helm-deployer" }}
        {{ $helmDeployerChart := getResource $helmDeployerComponent "name" "helm-deployer-chart" }}
        ref: {{ $helmDeployerChart.access.imageReference }}

      values:
        nameOverride: helm-deployer
        fullnameOverride: helm-{{ .imports.hostingClusterNamespace }}-helm-deployer

        identity: helm-{{ .imports.hostingClusterNamespace }}

        deployer:
          verbosityLevel: {{ .imports.landscaperConfig.landscaper.verbosity | default "info" }}
          {{- if (dig "landscaperConfig" "deployersConfig" "helm" "deployer" "controller" false .imports) }}
          controller:
          {{- toYaml .imports.landscaperConfig.deployersConfig.helm.deployer.controller | nindent 12 }}
          {{- end }}
          landscaperClusterKubeconfig:
            kubeconfig: |
{{ .imports.landscaperControllerKubeconfigYaml | indent 14 }}

          {{- if (dig "landscaperConfig" "deployersConfig" "helm" "deployer" "k8sClientSettings" false .imports) }}
          k8sClientSettings:
          {{- toYaml .imports.landscaperConfig.deployersConfig.helm.deployer.k8sClientSettings | nindent 12 }}
          {{- end }}

        image:
          {{ $image := getResource $helmDeployerComponent "name" "helm-deployer-image" }}
          {{ $imageRepo := ociRefRepo $image.access.imageReference }}
          {{ $imageTag := ociRefVersion $image.access.imageReference }}
          repository: {{ $imageRepo }}
          tag: {{ $imageTag }}
          pullPolicy: IfNotPresent

        {{- if (dig "landscaperConfig" "deployersConfig" "helm" "resources" false .imports) }}
        resources:
        {{- toYaml .imports.landscaperConfig.deployersConfig.helm.resources | nindent 10 }}
        {{- end }}

        {{- if (dig "landscaperConfig" "deployersConfig" "helm" "hpa" false .imports) }}
        hpa:
          {{- if (dig "landscaperConfig" "deployersConfig" "helm" "hpa" "maxReplicas" false .imports) }}
          maxReplicas: {{ .imports.landscaperConfig.deployersConfig.helm.hpa.maxReplicas }}
          {{- end }}
          {{- if (dig "landscaperConfig" "deployersConfig" "helm" "hpa" "averageCpuUtilization" false .imports) }}
          averageCpuUtilization: {{ .imports.landscaperConfig.deployersConfig.helm.hpa.averageCpuUtilization }}
          {{- end }}
          {{- if (dig "landscaperConfig" "deployersConfig" "helm" "hpa" "averageMemoryUtilization" false .imports) }}
          averageMemoryUtilization: {{ .imports.landscaperConfig.deployersConfig.helm.hpa.averageMemoryUtilization }}
          {{- end }}
        {{- end }}
{{ end }}

{{ if has "manifest" .imports.landscaperConfig.deployers }}
  - name: manifest-deployer
    type: landscaper.gardener.cloud/helm
    target:
      import: hostingCluster
    dependsOn:
      - landscaper
    config:
      apiVersion: helm.deployer.landscaper.gardener.cloud/v1alpha1
      kind: ProviderConfiguration
      updateStrategy: patch
      name: manifest-{{ .imports.hostingClusterNamespace }}
      namespace: {{ .imports.hostingClusterNamespace }}

      helmDeployment: false
      createNamespace: false

      readinessChecks:
        disableDefault: false

      chart:
        {{ $manifestDeployerComponent := getComponent $landscaperComponent "name" "manifest-deployer" }}
        {{ $manifestDeployerChart := getResource $manifestDeployerComponent "name" "manifest-deployer-chart" }}
        ref: {{ $manifestDeployerChart.access.imageReference }}

      values:
        nameOverride: manifest-deployer
        fullnameOverride: manifest-{{ .imports.hostingClusterNamespace }}-manifest-deployer

        identity: manifest-{{ .imports.hostingClusterNamespace }}

        deployer:
          verbosityLevel: {{ .imports.landscaperConfig.landscaper.verbosity | default "info" }}
          {{- if (dig "landscaperConfig" "deployersConfig" "manifest" "deployer" "controller" false .imports) }}
          controller:
          {{- toYaml .imports.landscaperConfig.deployersConfig.manifest.deployer.controller | nindent 12 }}
          {{- end }}
          landscaperClusterKubeconfig:
            kubeconfig: |
{{ .imports.landscaperControllerKubeconfigYaml | indent 14 }}

          {{- if (dig "landscaperConfig" "deployersConfig" "manifest" "deployer" "k8sClientSettings" false .imports) }}
          k8sClientSettings:
          {{- toYaml .imports.landscaperConfig.deployersConfig.manifest.deployer.k8sClientSettings | nindent 12 }}
          {{- end }}

        image:
          {{ $image := getResource $manifestDeployerComponent "name" "manifest-deployer-image" }}
          {{ $imageRepo := ociRefRepo $image.access.imageReference }}
          {{ $imageTag := ociRefVersion $image.access.imageReference }}
          repository: {{ $imageRepo }}
          tag: {{ $imageTag }}
          pullPolicy: IfNotPresent

        {{- if (dig "landscaperConfig" "deployersConfig" "manifest" "resources" false .imports) }}
        resources:
        {{- toYaml .imports.landscaperConfig.deployersConfig.manifest.resources | nindent 10 }}
        {{- end }}

        {{- if (dig "landscaperConfig" "deployersConfig" "manifest" "hpa" false .imports) }}
        hpa:
          {{- if (dig "landscaperConfig" "deployersConfig" "manifest" "hpa" "maxReplicas" false .imports) }}
          maxReplicas: {{ .imports.landscaperConfig.deployersConfig.manifest.hpa.maxReplicas }}
          {{- end }}
          {{- if (dig "landscaperConfig" "deployersConfig" "manifest" "hpa" "averageCpuUtilization" false .imports) }}
          averageCpuUtilization: {{ .imports.landscaperConfig.deployersConfig.manifest.hpa.averageCpuUtilization }}
          {{- end }}
          {{- if (dig "landscaperConfig" "deployersConfig" "manifest" "hpa" "averageMemoryUtilization" false .imports) }}
          averageMemoryUtilization: {{ .imports.landscaperConfig.deployersConfig.manifest.hpa.averageMemoryUtilization }}
          {{- end }}
        {{- end }}
{{ end }}

{{ if has "container" .imports.landscaperConfig.deployers }}
  - name: container-deployer
    type: landscaper.gardener.cloud/helm
    target:
      import: hostingCluster
    dependsOn:
      - landscaper
    config:
      apiVersion: helm.deployer.landscaper.gardener.cloud/v1alpha1
      kind: ProviderConfiguration
      updateStrategy: patch
      name: container-{{ .imports.hostingClusterNamespace }}
      namespace: {{ .imports.hostingClusterNamespace }}

      helmDeployment: false
      createNamespace: false

      readinessChecks:
        disableDefault: false

      chart:
        {{ $containerDeployerComponent := getComponent $landscaperComponent "name" "container-deployer" }}
        {{ $containerDeployerChart := getResource $containerDeployerComponent "name" "container-deployer-chart" }}
        ref: {{ $containerDeployerChart.access.imageReference }}

      values:
        nameOverride: container-deployer
        fullnameOverride: container-{{ .imports.hostingClusterNamespace }}-container-deployer

        identity: container-{{ .imports.hostingClusterNamespace }}

        deployer:
          verbosityLevel: {{ .imports.landscaperConfig.landscaper.verbosity | default "info" }}
          {{- if (dig "landscaperConfig" "deployersConfig" "container" "deployer" "controller" false .imports) }}
          controller:
          {{- toYaml .imports.landscaperConfig.deployersConfig.container.deployer.controller | nindent 12 }}
          {{- end }}
          landscaperClusterKubeconfig:
            kubeconfig: |
{{ .imports.landscaperControllerKubeconfigYaml | indent 14 }}

          {{- if (dig "landscaperConfig" "deployersConfig" "container" "deployer" "k8sClientSettings" false .imports) }}
          k8sClientSettings:
          {{- toYaml .imports.landscaperConfig.deployersConfig.container.deployer.k8sClientSettings | nindent 12 }}
          {{- end }}

        image:
          {{ $image := getResource $containerDeployerComponent "name" "container-deployer-image" }}
          {{ $imageRepo := ociRefRepo $image.access.imageReference }}
          {{ $imageTag := ociRefVersion $image.access.imageReference }}
          repository: {{ $imageRepo }}
          tag: {{ $imageTag }}
          pullPolicy: IfNotPresent

        {{- if (dig "landscaperConfig" "deployersConfig" "container" "resources" false .imports) }}
        resources:
        {{- toYaml .imports.landscaperConfig.deployersConfig.container.resources | nindent 10 }}
        {{- end }}

        {{- if (dig "landscaperConfig" "deployersConfig" "container" "hpa" false .imports) }}
        hpa:
          {{- if (dig "landscaperConfig" "deployersConfig" "container" "hpa" "maxReplicas" false .imports) }}
          maxReplicas: {{ .imports.landscaperConfig.deployersConfig.container.hpa.maxReplicas }}
          {{- end }}
          {{- if (dig "landscaperConfig" "deployersConfig" "container" "hpa" "averageCpuUtilization" false .imports) }}
          averageCpuUtilization: {{ .imports.landscaperConfig.deployersConfig.container.hpa.averageCpuUtilization }}
          {{- end }}
          {{- if (dig "landscaperConfig" "deployersConfig" "container" "hpa" "averageMemoryUtilization" false .imports) }}
          averageMemoryUtilization: {{ .imports.landscaperConfig.deployersConfig.container.hpa.averageMemoryUtilization }}
          {{- end }}
        {{- end }}
{{ end }}
